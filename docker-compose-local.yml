version: '3.8'

services:
  db:
    image: postgres:latest
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   ports:
  #     - 5050:80
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin
  #   depends_on:
  #     db:
  #       condition: service_started
  #   environment:
  #     - DB_HOST=db
  #   env_file:
  #     - ./.env

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    restart: always
    ports:
      - 8000:8000
    build: ./
    volumes:
      - ./files:/app/files
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
    env_file:
      - ./.env
    depends_on:
      worker:
        condition: service_healthy

  worker:
    restart: always
    build:
      dockerfile: worker.Dockerfile
    volumes:
      - ./files:/app/files
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "arq --check app.worker.WorkerSettings"]
      interval: 50s
      timeout: 5s
      retries: 5

volumes:
  db_data:
  # pgadmin_data:
  redis_data:
